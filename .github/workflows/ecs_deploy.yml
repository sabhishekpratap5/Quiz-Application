name: Deploy to ECS

on:
  push:
    branches:
      - development

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
    
    # Add more steps as needed
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_DEFAULT_REGION }}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, Tag, and Push Docker image to Amazon ECR
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: ${{ secrets.AWS_ECR_REPOSITORY }}
        IMAGE_TAG: latest  # Use a different tag or a combination of git commit hash for better versioning
      run: |
        docker build -t 022608205880.dkr.ecr.us-east-1.amazonaws.com/quiz-application-abhishek:$IMAGE_TAG .
        docker push 022608205880.dkr.ecr.us-east-1.amazonaws.com/quiz-application-abhishek:$IMAGE_TAG
        echo "::set-output name=image::022608205880.dkr.ecr.us-east-1.amazonaws.com/quiz-application-abhishek:$IMAGE_TAG"

    - name: Fill in the new image ID in the task definition
      id: task-def
      run: |
        TASK_DEF=ecs-task-def.json
    - name: Register new task definition
      run: |
        aws ecs register-task-definition --cli-input-json "$TASK_DEF"
    # - name: Register new task definition
    #   id: register-task-def
    #   run: |
    #     TASK_DEF_ARN=$(aws ecs register-task-definition --cli-input-json file://ecs-task-def.json | jq -r '.taskDefinition.taskDefinitionArn')
    #     echo "::set-output name=task_def_arn::$TASK_DEF_ARN"


    - name: Deploy to Amazon ECS
      run: |
        aws ecs update-service --cluster abhishek-devops-task-1 --service quiz-application-abhishek --task-definition $(jq -r .taskDefinition.taskDefinitionArn <<< "$TASK_DEF")

